{
  "description" : "OpenIO filebeat ingestion",
  "processors" : [
    {
      "remove" : {
        "if": "ctx.oio_remote_addr== '-'",
        "field": "oio_remote_addr"
      }
    },
    {
      "remove" : {
        "if": "ctx.oio_req_size == '-'",
        "field": "oio_req_size"
      }
    },
    {
      "remove" : {
        "if": "ctx.oio_resp_size == '-'",
        "field": "oio_resp_size"
      }
    },
    {
      "remove" : {
        "if": "ctx.oio_resp_time == '-'",
        "ignore_missing": true,
        "field": "oio_resp_time"
      }
    },
    {
      "remove" : {
        "if": "ctx.oio_swift_s3_op == '-'",
        "ignore_missing": true,
        "field": "oio_swift_s3_op"
      }
    },
    {
      "remove" : {
        "if": "ctx.oio_swift_source == '-'",
        "ignore_missing": true,
        "field": "oio_swift_source"
      }
    },
    {
      "remove" : {
        "if": "ctx.oio_policy_index == '-'",
        "ignore_missing": true,
        "field": "oio_policy_index"
      }
    },
    {
      "remove" : {
        "if": "ctx.oio_txid == '-'",
        "ignore_missing": true,
        "field": "oio_txid"
      }
    },
    {
      "gsub": {
        "ignore_missing": true,
        "field": "oio_req_start_time",
        "pattern": "\\.(\\d{3})\\d{6}$",
        "replacement": "$1"
      }
    },
    {
      "gsub": {
        "ignore_missing": true,
        "field": "oio_req_end_time",
        "pattern": "\\.(\\d{3})\\d{6}$",
        "replacement": "$1"
      }
    },
    {
      "script": {
        "if": "ctx.oio_local_addr != null && ctx.oio_local_port != null",
        "source": "ctx.oio_service_id = ctx.oio_local_addr + ':' + ctx.oio_local_port"
      }
    },
    {
      "script": {
        "if": "ctx.oio_resp_time_us != null",
        "source": "ctx.oio_resp_time = Double.parseDouble(ctx.oio_resp_time_us) / 1000000.0"
      }
    },
    {
      "remove" : {
        "ignore_missing": true,
        "field": "oio_resp_time_us"
      }
    },
    {
      "script": {
        "if": "ctx.oio_req_start_time == null && ctx.oio_resp_time != null",
        "source": "ctx.oio_req_start_time = Instant.ofEpochMilli(ZonedDateTime.parse(ctx['@timestamp']).toInstant().toEpochMilli() - (long)(ctx.oio_resp_time*1000))"
      }
    }
  ]
}
